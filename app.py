import gradio as gr
import qrcode
import io
import base64
from PIL import Image
import requests
import json

def generate_qr_code(text, style="default"):
    """Generate QR code with different styles"""
    if not text.strip():
        return None, "Vui l√≤ng nh·∫≠p n·ªôi dung QR code"
    
    # Create QR code
    qr = qrcode.QRCode(
        version=1,
        error_correction=qrcode.constants.ERROR_CORRECT_H,
        box_size=10,
        border=4,
    )
    qr.add_data(text)
    qr.make(fit=True)
    
    # Create image with different styles
    if style == "anime":
        fill_color = "#FF6B9D"
        back_color = "#FFE5F1"
    elif style == "watercolor":
        fill_color = "#4A90E2"
        back_color = "#E8F4FD"
    elif style == "digital":
        fill_color = "#00D4AA"
        back_color = "#E6FFF7"
    elif style == "fantasy":
        fill_color = "#9B59B6"
        back_color = "#F4E6FF"
    elif style == "minimalist":
        fill_color = "#2C3E50"
        back_color = "#FFFFFF"
    elif style == "neon":
        fill_color = "#00FF88"
        back_color = "#000000"
    else:
        fill_color = "#000000"
        back_color = "#FFFFFF"
    
    img = qr.make_image(fill_color=fill_color, back_color=back_color)
    
    # Convert to base64
    buffer = io.BytesIO()
    img.save(buffer, format='PNG')
    img_str = base64.b64encode(buffer.getvalue()).decode()
    
    return f"data:image/png;base64,{img_str}", "QR Code ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!"

def generate_ai_qr_code(text, ai_prompt, style="anime", ai_provider="free"):
    """Generate AI-powered QR code"""
    if not text.strip():
        return None, "Vui l√≤ng nh·∫≠p n·ªôi dung QR code"
    
    # Generate base QR code
    qr_result, qr_message = generate_qr_code(text, style)
    if not qr_result:
        return None, qr_message
    
    # If no AI prompt, return regular QR code
    if not ai_prompt.strip():
        return qr_result, "QR Code th∆∞·ªùng ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!"
    
    try:
        # Generate AI background using Pollinations (free)
        if ai_provider == "free":
            clean_prompt = ai_prompt.strip().replace(" ", "+")
            ai_image_url = f"https://image.pollinations.ai/prompt/{clean_prompt}?width=1024&height=1024&nologo=true"
            
            # For demo, we'll return the QR code with AI image URL
            return qr_result, f"AI QR Code ƒë√£ ƒë∆∞·ª£c t·∫°o! Background AI: {ai_image_url}"
        
        else:
            return qr_result, "T√≠nh nƒÉng OpenAI DALL-E 3 c·∫ßn API key. Vui l√≤ng s·ª≠ d·ª•ng AI Mi·ªÖn Ph√≠."
            
    except Exception as e:
        return qr_result, f"L·ªói khi t·∫°o AI background: {str(e)}"

# Create Gradio interface
with gr.Blocks(title="ü§ñ AI QR Code Generator", theme=gr.themes.Soft()) as demo:
    gr.Markdown("""
    # ü§ñ AI QR Code Generator ‚ú®
    
    ## üöÄ T·∫°o QR Code ƒë·ªôc ƒë√°o v·ªõi AI - Ho√†n to√†n mi·ªÖn ph√≠!
    
    ### ‚ú® T√≠nh nƒÉng:
    - üÜì **AI Mi·ªÖn Ph√≠** - S·ª≠ d·ª•ng Pollinations AI (kh√¥ng c·∫ßn API key)
    - üíé **AI Premium** - T√πy ch·ªçn OpenAI DALL-E 3 (c·∫ßn API key)
    - üé® **6 phong c√°ch ngh·ªá thu·∫≠t** - Anime, Watercolor, Digital Art, Fantasy, Minimalist, Neon
    - üì± **Responsive Design** - Ho·∫°t ƒë·ªông t·ªët tr√™n m·ªçi thi·∫øt b·ªã
    - üíæ **T·∫£i xu·ªëng** QR code ch·∫•t l∆∞·ª£ng cao
    """)
    
    with gr.Tab("üé® QR Code C∆° B·∫£n"):
        with gr.Row():
            with gr.Column():
                qr_text = gr.Textbox(
                    label="N·ªôi dung QR Code",
                    placeholder="Nh·∫≠p URL, text, ho·∫∑c b·∫•t k·ª≥ n·ªôi dung n√†o...",
                    lines=3
                )
                qr_style = gr.Dropdown(
                    choices=["default", "anime", "watercolor", "digital", "fantasy", "minimalist", "neon"],
                    value="default",
                    label="Phong c√°ch"
                )
                qr_generate_btn = gr.Button("üé® T·∫°o QR Code", variant="primary")
            
            with gr.Column():
                qr_output = gr.Image(label="QR Code", type="pil")
                qr_message = gr.Textbox(label="Th√¥ng b√°o", interactive=False)
    
    with gr.Tab("ü§ñ AI QR Code"):
        with gr.Row():
            with gr.Column():
                ai_qr_text = gr.Textbox(
                    label="N·ªôi dung QR Code",
                    placeholder="Nh·∫≠p URL, text, ho·∫∑c b·∫•t k·ª≥ n·ªôi dung n√†o...",
                    lines=3
                )
                
                with gr.Row():
                    ai_provider = gr.Radio(
                        choices=["free", "openai"],
                        value="free",
                        label="Ch·ªçn AI Engine",
                        info="üÜì Mi·ªÖn ph√≠ ho·∫∑c üíé Premium"
                    )
                
                ai_prompt = gr.Textbox(
                    label="M√¥ t·∫£ h√¨nh ·∫£nh AI (T√πy ch·ªçn)",
                    placeholder="M√¥ t·∫£ h√¨nh ·∫£nh b·∫°n mu·ªën AI t·∫°o l√†m background...",
                    lines=2
                )
                
                ai_style = gr.Dropdown(
                    choices=["anime", "watercolor", "digital", "fantasy", "minimalist", "neon"],
                    value="anime",
                    label="Phong c√°ch ngh·ªá thu·∫≠t"
                )
                
                ai_generate_btn = gr.Button("ü§ñ T·∫°o AI QR Code", variant="primary")
            
            with gr.Column():
                ai_output = gr.Image(label="AI QR Code", type="pil")
                ai_message = gr.Textbox(label="Th√¥ng b√°o", interactive=False)
    
    # Event handlers
    qr_generate_btn.click(
        fn=generate_qr_code,
        inputs=[qr_text, qr_style],
        outputs=[qr_output, qr_message]
    )
    
    ai_generate_btn.click(
        fn=generate_ai_qr_code,
        inputs=[ai_qr_text, ai_prompt, ai_style, ai_provider],
        outputs=[ai_output, ai_message]
    )
    
    gr.Markdown("""
    ### üéØ C√°ch s·ª≠ d·ª•ng:
    1. Ch·ªçn tab "QR Code C∆° B·∫£n" ho·∫∑c "AI QR Code"
    2. Nh·∫≠p n·ªôi dung QR code (URL, text, etc.)
    3. Ch·ªçn phong c√°ch ngh·ªá thu·∫≠t
    4. N·∫øu d√πng AI, nh·∫≠p m√¥ t·∫£ h√¨nh ·∫£nh (t√πy ch·ªçn)
    5. Nh·∫•n n√∫t t·∫°o v√† t·∫£i xu·ªëng!
    
    ### üåü Ho√†n to√†n mi·ªÖn ph√≠ v√† kh√¥ng c·∫ßn ƒëƒÉng k√Ω!
    """)

# Launch the app
if __name__ == "__main__":
    demo.launch(
        server_name="0.0.0.0",
        server_port=7860,
        share=True
    )
